#
# Copyright (c) 2009 Josef 'Jeff' Sipek
#

#
# At this point, the machine is running in ESA390 mode.
#

.long 0x00080000
.long ENTRY

# EXT NEW PSW
.org 88
.long 0x000A0000
.long 0x00000001

# PROG NEW PSW
.org 104
.long 0x000A0000
.long 0x00000002

# IO NEW PSW
.org 120
.long 0x00080000
.long IOSVC

# SUBSYSTEM ID
.org 184
SUBSYSID:
.long 0x00000000

# CODE BEGINS
.org 512
ENTRY:
	BALR	%R12,0

	# LET'S FIND A CONSOLE TO WORK WITH
	LA	%R1,0x1(%R0)
	LA	%R2,0x1(%R0)
	SLA	%R1,16
	SR	%R1,%R2
FINDNEXT:
	LA	%R1,1(%R1)

	C	%R1,MAXSCH
	BC	2,FAIL_NONE

	STSCH	SCHIB
	BC	7,FINDNEXT

	NI	SCHIB+5,0x01
	BC	11,FINDNEXT

	CLC	SCHIB+6(2),DEVNUM
	BC	7,FINDNEXT

	OI	SCHIB+5,0x80

	MSCH	SCHIB
	BC	7,FAIL_ERR

	B	FOUND

FAIL_NONE:
	ST	%R1,DISWAIT+4
	LPSW	DISWAIT

FAIL_ERR:
	OI	DISWAIT+7,0xF0
	LPSW	DISWAIT

FAIL_IO:
	OI	DISWAIT+7,0xF1
	LPSW	DISWAIT

MAXSCH:
.long 0x0001ffff

DEVNUM:
.short 0x0009

.align 8
ENWAIT:
.long 0x020A0000
.long 0x00000707

DISWAIT:
.long 0x000A0000
.long 0x00000000

.align 8
SCHIB:
.skip 13*4

	# FOUND THE CONSOLE; LET'S PREPARE THE STRING CONSTANTS
FOUND:
	STCTL	%R6,%R6,CR6
	OI	CR6,0xff
	LCTL	%R6,%R6,CR6

	L	%R2,READCCW
	LA	%R3,READBUF
	OR	%R2,%R3
	ST	%R2,READCCW

	L	%R2,GREETCCW
	LA	%R3,GREETMSG
	OR	%R2,%R3
	ST	%R2,GREETCCW

	L	%R2,GREETCCW+4
	L	%R3,GREETLEN
	OR	%R2,%R3
	ST	%R2,GREETCCW+4

	TR	GREETMSG(_GREETLEN),A2E

	OI	ORB+6,0xff
	LA	%R2,GREETCCW

	# NOW TIME FOR THE SHOW!
	B	GO

IOSVC:
	L	%R2,SUBSYSID
	CR	%R1,%R2
	BC	7,WAIT

	TSCH	IRB
	BC	1,FAIL_IO

	CLC	SUBSYSID+4(4),ORB
	BC	7,DO_READ

	XR	%R3,%R3
	IC	%R3,IRB+8
	N	%R3,DE_MASK
	BC	11,WAIT

IO_DONE:
	LA	%R2,GREETCCW
	C	%R2,ORB
	BC	8,WAIT_FOR_USER

	# SHAKE SHAKE SHAKE

	LA	%R2,GREETCCW
	B	GO

DO_READ:
	LA	%R2,READCCW

GO:
	ST	%R2,ORB
	ST	%R2,ORB+8

	SSCH	ORB
	BC	7,FAIL_IO
WAIT:
	LPSW	ENWAIT

WAIT_FOR_USER:
	LA	%R2,0
	ST	%R2,ORB
	LPSW	ENWAIT

ATTN_MASK:
.long 0x00000080
DE_MASK:
.long 0x00000004

.align 8
GREETCCW:
.long 0x01000000
.long 0x00000000

GREETMSG:
.ascii "I AM THE MAGIC 8 BALL...ASK A QUESTION\n"
.equ _GREETLEN, .-GREETMSG
GREETLEN:
.long _GREETLEN

.align 8
READCCW:
.long 0x04000000
.long 0x00000001

READBUF:
.byte 0x00

.align 8
ORB:
.skip 8*4

.align 8
IRB:
.skip 24*4

CR6:
.long 0x00000000

A2E:
.byte 0x00, 0x01, 0x02, 0x03, 0x37, 0x2D, 0x2E, 0x2F
.byte 0x16, 0x05, 0x15, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
.byte 0x10, 0x11, 0x12, 0x13, 0x3C, 0x3D, 0x32, 0x26
.byte 0x18, 0x19, 0x3F, 0x27, 0x22, 0x1D, 0x1E, 0x1F
.byte 0x40, 0x5A, 0x7F, 0x7B, 0x5B, 0x6C, 0x50, 0x7D
.byte 0x4D, 0x5D, 0x5C, 0x4E, 0x6B, 0x60, 0x4B, 0x61
.byte 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7
.byte 0xF8, 0xF9, 0x7A, 0x5E, 0x4C, 0x7E, 0x6E, 0x6F
.byte 0x7C, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7
.byte 0xC8, 0xC9, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6
.byte 0xD7, 0xD8, 0xD9, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6
.byte 0xE7, 0xE8, 0xE9, 0xBA, 0xE0, 0xBB, 0xB0, 0x6D
.byte 0x79, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87
.byte 0x88, 0x89, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96
.byte 0x97, 0x98, 0x99, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6
.byte 0xA7, 0xA8, 0xA9, 0xC0, 0x4F, 0xD0, 0xA1, 0x07
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x59, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
.byte 0x90, 0x3F, 0x3F, 0x3F, 0x3F, 0xEA, 0x3F, 0xFF
