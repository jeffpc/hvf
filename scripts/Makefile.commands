cmd-c-to-o=$(CC) $(CFLAGS) $(NUCLEUSCFLAGS) -c -o $(2) $(1)
cmd-c-to-s=$(CC) $(CFLAGS) $(NUCLEUSCFLAGS) -S -o $(2) $(1)
cmd-c-to-o-ipl=$(CC) $(CFLAGS) -DBLOCK_SIZE=$(3) -DBYTES_TO_READ=$(4) -c -o $(2) $(1)
cmd-s-to-o=$(AS) -m64 -o $(2) $(1)
cmd-s-to-o-31=$(AS) -m31 -o $(2) $(1)
cmd-o-to-builtin=$(LD) $(LDFLAGS) -r -o $(2) $(1)
cmd-link-hvf=$(LD) $(LDFLAGS) -T scripts/linker.script -o $(2) $(1)
cmd-link-ipl=$(LD) -melf64_s390 -T ipl/linker.script -o $(2) $(1)
cmd-objcopy-t=$(OBJCOPY) -O binary -j .text $(1) $(2)
cmd-objcopy-tdr=$(OBJCOPY) -O binary -j .text -j .data -j .rodata $(1) $(2)
cmd-genipl-s=bash scripts/gen_ipl_s.sh $(1) $(2)
cmd-concat=cat $(1) > $(2)
cmd-clean=rm -f $(1)
cmd-cscope=cscope -R -b

ifeq ($V,1)
c-to-o=$(cmd-c-to-o)
c-to-s=$(cmd-c-to-s)
c-to-o-ipl=$(cmd-c-to-o-ipl)
s-to-o=$(cmd-s-to-o)
s-to-o-31=$(cmd-s-to-o-31)
o-to-builtin=$(cmd-o-to-builtin)
link-hvf=$(cmd-link-hvf)
link-ipl=$(cmd-link-ipl)
objcopy-t=$(cmd-objcopy-t)
tobjcopy-tdr=$(cmd-objcopy-tdr)
genipl-s=$(cmd-genipl-s)
concat=$(cmd-concat)
clean=$(cmd-clean)
cscope=$(cmd-cscope)
else
c-to-o=@echo "  [CC]      $(1)"; $(cmd-c-to-o)
c-to-s=@echo "  [CC]      $(1)"; $(cmd-c-to-s)
c-to-o-ipl=@echo "  [CC]      $(1)"; $(cmd-c-to-o-ipl)
s-to-o=@echo "  [AS]      $(1)"; $(cmd-s-to-o)
s-to-o-31=@echo "  [AS]      $(1)"; $(cmd-s-to-o-31)
o-to-builtin=@echo "  [LD]      $(2)"; $(cmd-o-to-builtin)
link-hvf=@echo "  [LD]      hvf"; $(cmd-link-hvf)
link-ipl=@echo "  [LD]      $2"; $(cmd-link-ipl)
objcopy-t=@echo "  [OBJCOPY] $2"; $(cmd-objcopy-t)
objcopy-tdr=@echo "  [OBJCOPY] $2"; $(cmd-objcopy-tdr)
genipl-s=@echo "  [GENIPL]  $2"; $(cmd-genipl-s)
concat=@echo "  [CONCAT]  $1"; $(cmd-concat)
clean=@echo "  [CLEAN]   $1"; $(cmd-clean)
cscope=@echo "  [CSCOPE]  cscope.out"; $(cmd-cscope)
endif

